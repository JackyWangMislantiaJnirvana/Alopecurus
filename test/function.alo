-- local lambda call test
local f() -> 2

assert(f() == 2)

local g = \x -> x

assert(g(3) == 3)

-- arguments test

local h(a,b,c) -> c == nil
assert(h(1, 2))

local tail(x,y...) -> #y == 0 ? x : tail(y)
local head(x,y...) -> x
assert(head(3, 4, 5) == 3)
assert(tail(3, 4, 5) == 5)

-- nested function test
local curry(f) -> \x -> \y -> f(x, y)
local bif(x,y) -> x + y

assert(curry(bif)(1)(2) == 3)
